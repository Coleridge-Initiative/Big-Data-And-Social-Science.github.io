data[,i][data[,i]=='-77'] <- NA
data[,i][data[,i]=='-99'] <- NA
data[,i][data[,i]=='0'] <- NA
data[,i][data[,i]=="0% - sicher nicht"] <- "0%"
data[,i][data[,i]=="100% - sicher"] <- "100%"
data[,i] <- str_replace(data[,i], "%", "")
data[,i] <- as.numeric(data[,i])
}
table(data$trust.3.google.prob.old)
table(data$trust.3.google.prob)
# Generalized trust
data$trust.generalized.old <- data$trust.generalized
data$trust.generalized[data$trust.generalized=='-66'] <- NA
data$trust.generalized[data$trust.generalized=='-77'] <- NA
data$trust.generalized[data$trust.generalized=='-99'] <- NA
data$trust.generalized[data$trust.generalized=="0 - man kann nicht vorsichtig genug sein"] <- "0"
data$trust.generalized[data$trust.generalized=="10 - man kann den meisten Menschen vertrauen"] <- "10"
data$trust.generalized <- as.numeric(data$trust.generalized)
# Check
table(data$trust.generalized)
table(data$trust.generalized.old)
# Knowing GDPR
data$gdpr.know[data$gdpr.know=="-66"] <- NA
data$gdpr.know[data$gdpr.know=="-77"] <- NA
data$gdpr.know[data$gdpr.know=="-99"] <- NA
data$gdpr.know[data$gdpr.know=="0"] <- NA
# Aims of GDPR
data$gdpr.aims[data$gdpr.aims=="-66"] <- NA
data$gdpr.aims[data$gdpr.aims=="-77"] <- NA
data$gdpr.aims[data$gdpr.aims=="-99"] <- NA
# Privacy
vars <- c("privacy.hurt.google", "privacy.hurt.facebook", "privacy.hurt.authorities", "privacy.hurt.researchers", "privacy.worry")
for (i in vars){
data[,i][data[,i]=='-66'] <- NA
data[,i][data[,i]=='-77'] <- NA
data[,i][data[,i]=='-99'] <- NA
}
data$privacy.worry[data$privacy.worry=="0"] <- NA
data.wave1 <- data # For later!
# Packages
library(haven)
library(plotly)
library(dplyr)
library(stargazer)
library(readr)
library(stringr)
library(xtable)
library(kableExtra)
library(knitr)
library(tidyr)
data <- read_delim("./data_project_727416_2018_08_02 - Final.csv", delim = ",", locale = locale(encoding = 'latin1'))
table(data$dispcode)
# Filter complete
data <- data %>% filter(dispcode %in% c("Completed (31)", "Completed after break (32)"))
# Filter duplicate IDs
nrow(data)
sum(duplicated(data$p_0002))
data <- data %>% filter(duplicated(data$p_0002)!=TRUE)
nrow(data)
data$p_0002[duplicated(data$p_0002)]
# N rows
nrow(data)
data <- rename(data,
pid = p_0002,
sex = v_99,
age = v_101,
state = v_100,
school.education = v_62,
highest.education = v_60,
device.smartphone = v_11,
device.handy = v_12,
device.desktop = v_13,
device.tablet = v_14,
device.ereader = v_15,
account.google = v_549,
account.facebook = v_550,
account.twitter = v_551,
account.linkedin = v_552,
account.xing = v_553,
random_id = c_0002,
trust.1.google.norm = v_618,
trust.1.facebook.norm = v_619,
trust.1.fedoffstats.norm = v_620,
trust.1.researchers.norm = v_621,
trust.generalized = v_642,
gdpr.know = v_604,
gdpr.aims = v_605,
privacy.worry = v_45,
privacy.hurt.google = v_666,
privacy.hurt.facebook = v_667,
privacy.hurt.fedoffstats = v_668,
privacy.hurt.researchers = v_669,
facebook_data_name = v_671,
facebook_data_email = v_672,                                facebook_data_address = v_673,
facebook_data_birthdate = v_674,
facebook_data_phone = v_675,
facebook_data_income = v_677,
facebook_data_mstatus = v_678,
facebook_data_nchildren = v_679,
facebook_data_location = v_681,
facebook_data_browserhistory = v_682,
facebook_data_otheraccounts = v_683,
facebook_data_thirdpartydata = v_684,
google_data_name = v_705,
google_data_email = v_706,                                  google_data_address = v_707,
google_data_birthdate = v_708,
google_data_phone = v_709,
google_data_income = v_711,
google_data_mstatus = v_712,
google_data_nchildren = v_713,
google_data_location = v_715,
google_data_browserhistory = v_716,
google_data_otheraccounts = v_717,
google_data_thirdpartydata = v_718
)
data <- data.frame(data)
# Age
data$age <- 2018-data$age
data$age[data$age>200] <- NA
# School education
data$school.education[data$school.education=='-77'] <- NA
data$school.education[data$school.education=='0'] <- NA
# Highest education
data$highest.education[data$highest.education=='-77'] <- NA
data$highest.education[data$highest.education=='0'] <- NA
# Gender
data$sex[data$sex=='-77'] <- NA
data$sex[data$sex=='0'] <- NA
# State
data$state[data$state=='---hier klicken---'] <- NA
data$state[data$state=='-77'] <- NA
data$state[data$state=='Baden-WÃ¼rttemberg'] <- "BW"
data$state[data$state=='Bayern'] <- "BY"
data$state[data$state=='Berlin'] <- "BE"
data$state[data$state=='Brandenburg'] <- "BB"
data$state[data$state=='Bremen'] <- "HB"
data$state[data$state=='Hamburg'] <- "HH"
data$state[data$state=='Hessen'] <- "HE"
data$state[data$state=='Mecklenburg-Vorpommern'] <- "MV"
data$state[data$state=='Niedersachsen'] <- "NI"
data$state[data$state=='Nordrhein-Westfalen'] <- "NW"
data$state[data$state=='Rheinland-Pfalz'] <- "RP"
data$state[data$state=='Saarland'] <- "SL"
data$state[data$state=='Sachsen'] <- "SN"
data$state[data$state=='Sachsen-Anhalt'] <- "ST"
data$state[data$state=='Schleswig-Holstein'] <- "SH"
data$state[data$state=='ThÃ¼ringen'] <- "TH"
# Device Usage
vars <- c("device.smartphone", "device.handy", "device.desktop", "device.tablet", "device.ereader")
for (i in vars){
data[,i][data[,i]=='-66'] <- NA
data[,i][data[,i]=='-77'] <- NA
data[,i][data[,i]=='-99'] <- NA
data[,i][data[,i]=='0'] <- NA
}
# Accounts
vars <- c("account.google", "account.facebook", "account.linkedin", "account.xing")
for (i in vars){
data[,i][data[,i]=='-66'] <- NA
data[,i][data[,i]=='-77'] <- NA
data[,i][data[,i]=='-99'] <- NA
data[,i][data[,i]=='0'] <- NA
data[,i][data[,i]=="Nein, hatte nie einen Account"] <- "No, never"
data[,i][data[,i]=="Nein, derzeit nicht, aber frÃ¼her"] <- "No, but before"
data[,i][data[,i]=="Ja, habe derzeit einen Account"] <- "Yes"
}
# STANDARD TRUST SCALES
vars <- c("trust.1.google.norm", "trust.1.facebook.norm", "trust.1.fedoffstats.norm", "trust.1.researchers.norm")
data$trust.1.google.norm.old <- data$trust.1.google.norm
for (i in vars){
data[,i][data[,i]=='-66'] <- NA
data[,i][data[,i]=='-77'] <- NA
data[,i][data[,i]=='-99'] <- NA
data[,i][data[,i]=='0'] <- NA
data[,i][data[,i]=="0 Ã¼berhaupt nicht"] <- "0"
data[,i][data[,i]=="10 voll und ganz"] <- "10"
data[,i] <- as.numeric(data[,i])
}
# Check
table(data$trust.1.google.norm)
table(data$trust.1.google.norm.old)
# Generalized trust
data$trust.generalized.old <- data$trust.generalized
data$trust.generalized[data$trust.generalized=='-66'] <- NA
data$trust.generalized[data$trust.generalized=='-77'] <- NA
data$trust.generalized[data$trust.generalized=='-99'] <- NA
data$trust.generalized[data$trust.generalized=="0 - man kann nicht vorsichtig genug sein"] <- "0"
data$trust.generalized[data$trust.generalized=="10 - man kann den meisten Menschen vertrauen"] <- "10"
data$trust.generalized <- as.numeric(data$trust.generalized)
# Check
table(data$trust.generalized)
table(data$trust.generalized.old)
# Knowing GDPR
data$gdpr.know[data$gdpr.know=="-66"] <- NA
data$gdpr.know[data$gdpr.know=="-77"] <- NA
data$gdpr.know[data$gdpr.know=="-99"] <- NA
data$gdpr.know[data$gdpr.know=="0"] <- NA
# Aims of GDPR
data$gdpr.aims[data$gdpr.aims=="-66"] <- NA
data$gdpr.aims[data$gdpr.aims=="-77"] <- NA
data$gdpr.aims[data$gdpr.aims=="-99"] <- NA
# Privacy
vars <- c("privacy.hurt.google", "privacy.hurt.facebook", "privacy.hurt.fedoffstats", "privacy.hurt.researchers", "privacy.worry")
for (i in vars){
data[,i][data[,i]=='-66'] <- NA
data[,i][data[,i]=='-77'] <- NA
data[,i][data[,i]=='-99'] <- NA
}
data$privacy.worry[data$privacy.worry=="0"] <- NA
#
vars <- c("facebook_data_name", "facebook_data_email", "facebook_data_address",
"facebook_data_birthdate", "facebook_data_phone", "facebook_data_income",
"facebook_data_mstatus", "facebook_data_nchildren", "facebook_data_location",
"facebook_data_browserhistory", "facebook_data_otheraccounts",
"facebook_data_thirdpartydata", "google_data_name", "google_data_email",
"google_data_address", "google_data_birthdate", "google_data_phone",
"google_data_income", "google_data_mstatus", "google_data_nchildren",
"google_data_location", "google_data_browserhistory", "google_data_otheraccounts",
"google_data_thirdpartydata")
for (i in vars){
data[,i][data[,i]=='-66'] <- NA
data[,i][data[,i]=='-77'] <- NA
data[,i][data[,i]=='-99'] <- NA
data[,i][data[,i]=='0'] <- NA
data[,i][data[,i]=='Ja, sollten gespeichert werden dÃ¼rfen'] <- "1"
data[,i][data[,i]=='Nein, sollten nicht gespeichert werden dÃ¼rfen'] <- "0"
data[,i] <- as.numeric(data[,i])
print(table(data[,i]))
}
data.wave2 <- data # For later!
data.wave1 <- data.wave1 %>% mutate(w1_participant = TRUE) %>% mutate(wave = "wave 0")
data.wave2 <- data.wave2 %>% mutate(w2_participant = TRUE) %>% mutate(wave = "wave 1")
data.wave1 <- data.wave1 %>% select(pid, wave, gdpr.know, gdpr.aims, contains("account"),
contains("trust"), contains("privacy"))
data.wave2 <- data.wave2 %>% select(pid, wave, gdpr.know, gdpr.aims, contains("account"),
contains("trust"), contains("privacy"))
data.long <- bind_rows(data.wave1, data.wave2)
#nrow(data.long)
# Keep only pids in both waves
data.long <- data.long %>% filter(pid %in% intersect(data.wave1$pid, data.wave2$pid))
# Create numeric wave variable
data.long$wave.num <- NA
data.long$wave.num[data.long$wave=="wave 0"] <- 0
data.long$wave.num[data.long$wave=="wave 1"] <- 1
summary.stats  <- data.long %>% select_if(is.numeric) %>% filter(wave.num == 0)
stargazer::stargazer(summary.stats,
summary = TRUE,
type="latex",
label = "tab:wave1",
font.size="footnotesize",
table.placement="H",
#column.sep.width = "5pt",
title = "wave 0 (= 0)",
digits = 2,
rownames = FALSE,
header=FALSE,
notes = "\\parbox[t]{7cm}{Note: Summary statistics for numeric variables.}",  #\\textwidth
notes.append = FALSE,
notes.align = "l")
summary.stats  <- data.long %>% select_if(is.numeric) %>% filter(wave.num == 1)
stargazer::stargazer(summary.stats,
summary = TRUE,
type="latex",
label = "tab:wave2",
font.size="footnotesize",
table.placement="H",
#column.sep.width = "5pt",
title = "wave 1 (= 1)",
digits = 2,
rownames = FALSE,
header=FALSE,
notes = "\\parbox[t]{7cm}{Note: Summary statistics for numeric variables.}",  #\\textwidth
notes.append = FALSE,
notes.align = "l")
# See:
data.summary <- data.long %>% select(gdpr.know, wave.num) %>% mutate(gdpr.know = as.factor(gdpr.know))
library(qwraps2)
# define the markup language we are working in.
# options(qwraps2_markup = "latex") is also supported.
options(qwraps2_markup = "markdown")
our_summary1 <-
list("gdpr.know" =
list("Ja" = ~ qwraps2::n_perc0(gdpr.know == "Ja"),
"Nein"  = ~ qwraps2::n_perc0(gdpr.know == "Nein"))
)
### By number of Cylinders
summary_table(dplyr::group_by(data.summary, wave.num), our_summary1)
#kable(table(data.long$gdpr.know, data.long$wave))
barplot(table(data.long$gdpr.know, data.long$wave),
beside=TRUE,
cex.main=0.7, main = "Haben Sie schon einmal von der EU-Datenschutz-Grundverordnung 2018 gehÃ¶rt?",
xlab = "gdpr.know (Yes (dark) vs. No (light))",
ylab= "N")
data.long$privacy.hurt.google[data.long$privacy.hurt.google=="0"] <- NA
#kable(table(data.long$privacy.hurt.google, data.long$wave))
barplot(table(data.long$privacy.hurt.google, data.long$wave),
beside=TRUE,
cex.main=0.7, main = " Bitte geben Sie an, ob Sie jemals das GefÃ¼hl hatten, dass Ihre PrivatsphÃ¤re durch folgende Institutionen verletzt wurde.",
xlab = "privacy.hurt.google, Yes (dark) vs. No (light)",
ylab= "N")
data.long$privacy.hurt.facebook[data.long$privacy.hurt.facebook=="0"] <- NA
#kable(table(data.long$privacy.hurt.facebook, data.long$wave))
barplot(table(data.long$privacy.hurt.facebook, data.long$wave),
beside=TRUE,
cex.main=0.7, main = " Bitte geben Sie an, ob Sie jemals das GefÃ¼hl hatten, dass Ihre PrivatsphÃ¤re durch folgende Institutionen verletzt wurde.",
xlab = "privacy.hurt.facebook, Yes (dark) vs. No (light)",
ylab= "N")
data.long$privacy.worry[data.long$privacy.worry=="0"] <- NA
#kable(table(data.long$privacy.worry, data.long$wave))
barplot(table(data.long$privacy.worry, data.long$wave),
beside=TRUE,
cex.main=0.7, main = "Wie besorgt sind Sie um Ihre PrivatsphÃ¤re im Allgemeinen?",
xlab = "privacy.worry, Nicht/wenig/etwas/sehr",
ylab= "N")
# Combined trust variables
# Maybe a bit messy, but it seems to work: add a new variable for trust in Google, based on the first "normal" trust variable; fill values from other Google trust variables as long as values for the combined variable are still missing:
for (row in  1:nrow(data.long)){
data.long$trust.google.comb[row] <- data.long$trust.1.google.norm[row]
if (is.na(data.long$trust.google.comb[row]==TRUE)){
data.long$trust.google.comb[row] <- data.long$trust.2.google.norm[row]
}
if (is.na(data.long$trust.google.comb[row]==TRUE)){
data.long$trust.google.comb[row] <- data.long$trust.3.google.prob[row]/10
}
if (is.na(data.long$trust.google.comb[row]==TRUE)){
data.long$trust.google.comb[row] <- data.long$trust.4.google.prob[row]/10
}
}
# ... for Facebook
for (row in  1:nrow(data.long)){
data.long$trust.facebook.comb[row] <- data.long$trust.1.facebook.norm[row]
if (is.na(data.long$trust.facebook.comb[row]==TRUE)){
data.long$trust.facebook.comb[row] <- data.long$trust.2.facebook.norm[row]
}
if (is.na(data.long$trust.facebook.comb[row]==TRUE)){
data.long$trust.facebook.comb[row] <- data.long$trust.3.facebook.prob[row]/10
}
if (is.na(data.long$trust.facebook.comb[row]==TRUE)){
data.long$trust.facebook.comb[row] <- data.long$trust.4.facebook.prob[row]/10
}
}
# ... for researchers
for (row in  1:nrow(data.long)){
data.long$trust.researchers.comb[row] <- data.long$trust.1.researchers.norm[row]
if (is.na(data.long$trust.researchers.comb[row]==TRUE)){
data.long$trust.researchers.comb[row] <- data.long$trust.2.researchers.norm[row]
}
if (is.na(data.long$trust.researchers.comb[row]==TRUE)){
data.long$trust.researchers.comb[row] <- data.long$trust.3.researchers.prob[row]/10
}
if (is.na(data.long$trust.researchers.comb[row]==TRUE)){
data.long$trust.researchers.comb[row] <- data.long$trust.4.researchers.prob[row]/10
}
}
# ... for Federal Statistical Office
for (row in  1:nrow(data.long)){
data.long$trust.fedoffstats.comb[row] <- data.long$trust.1.fedoffstats.norm[row]
if (is.na(data.long$trust.fedoffstats.comb[row]==TRUE)){
data.long$trust.fedoffstats.comb[row] <- data.long$trust.2.fedoffstats.norm[row]
}
if (is.na(data.long$trust.fedoffstats.comb[row]==TRUE)){
data.long$trust.fedoffstats.comb[row] <- data.long$trust.3.fedoffstats.prob[row]/10
}
if (is.na(data.long$trust.fedoffstats.comb[row]==TRUE)){
data.long$trust.fedoffstats.comb[row] <- data.long$trust.4.fedoffstats.prob[row]/10
}
}
# DID models for combined trust variables
did.google.comb <- lm(trust.google.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.google.comb, type="text")
did.facebook.comb <- lm(trust.facebook.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.facebook.comb, type="text")
did.researchers.comb <- lm(trust.researchers.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.researchers.comb, type="text")
did.fedoffstats.comb <- lm(trust.fedoffstats.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.fedoffstats.comb, type="text")
# DID models for standard trust variables (via subsetting)
did.google.norm <- lm(trust.google.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long,
subset = (is.na(trust.1.google.norm)==FALSE) | (is.na(trust.2.google.norm)==FALSE))
summary(did.google.norm, type="text")
did.facebook.norm <- lm(trust.facebook.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long,
subset = (is.na(trust.1.facebook.norm)==FALSE) | (is.na(trust.2.facebook.norm)==FALSE))
summary(did.facebook.norm, type="text")
did.researchers.norm <- lm(trust.researchers.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long,
subset = (is.na(trust.1.researchers.norm)==FALSE) | (is.na(trust.2.researchers.norm)==FALSE))
summary(did.researchers.norm, type="text")
did.fedoffstats.norm <- lm(trust.fedoffstats.comb ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long,
subset = (is.na(trust.1.fedoffstats.norm)==FALSE) | (is.na(trust.2.fedoffstats.norm)==FALSE))
summary(did.fedoffstats.norm, type="text")
# DID: privacy worry. Before, convert to numeric variable (via factoring)
data.long$privacy.worry.factor <- factor(data.long$privacy.worry)
data.long$privacy.worry.factor <- factor(data.long$privacy.worry.factor,
levels(data.long$privacy.worry.factor)[c(3,4,1,2)])
data.long$privacy.worry.numeric <- as.numeric(data.long$privacy.worry.factor)
# DID
did.privacyworry <- lm(privacy.worry.numeric ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.privacyworry, type="text")
# DID models: privacy hurt. Before, convert to numeric variables (via factoring)
# Recoding: 0 = No, 1 = Yes
data.long$hurt.google.numeric <- as.numeric(factor(data.long$privacy.hurt.google))
data.long$hurt.google.numeric[data.long$hurt.google.numeric==2] <- 0
data.long$hurt.facebook.numeric <- as.numeric(factor(data.long$privacy.hurt.facebook))
data.long$hurt.facebook.numeric[data.long$hurt.facebook.numeric==2] <- 0
data.long$hurt.researchers.numeric <-
as.numeric(factor(data.long$privacy.hurt.researchers))
data.long$hurt.researchers.numeric[data.long$hurt.researchers.numeric==2] <- 0
data.long$hurt.authorities.numeric <-
as.numeric(factor(data.long$privacy.hurt.authorities))
data.long$hurt.authorities.numeric[data.long$hurt.authorities.numeric==2] <- 0
# DID models
did.hurt.google <- lm(hurt.google.numeric ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.hurt.google, type="text")
did.hurt.facebook <- lm(hurt.facebook.numeric ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.hurt.facebook, type="text")
did.hurt.researchers <- lm(hurt.researchers.numeric ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.hurt.researchers, type="text")
did.hurt.authorities <- lm(hurt.authorities.numeric ~
wave.num + gdpr.know + wave.num*gdpr.know,
data = data.long)
summary(did.hurt.authorities, type="text")
library(dplyr)
library(dplyr)
read.csv("G:\Sicherung_0410\Dokumente\Job Kreuter\2018_GDPR\gdprknow.csv)
read.csv("G:\Sicherung_0410\Dokumente\Job Kreuter\2018_GDPR\gdprknow.csv"")
read.csv("G:\Sicherung_0410\Dokumente\Job Kreuter\2018_GDPR\gdprknow.csv")
read.csv("G:\\Sicherung_0410\\Dokumente\\Job Kreuter\\2018_GDPR\\gdprknow.csv")
gdpropen <- read.csv("G:\\Sicherung_0410\\Dokumente\\Job Kreuter\\2018_GDPR\\gdprknow.csv")
View(gdpropen)
gdpr <- read.csv("G:\\Sicherung_0410\\Dokumente\\Job Kreuter\\2018_GDPR\\gdprknow.csv")
table(gdpr$gdpr.know, gdpr$gdpr.aims)
gdpr$open_answered <- 0
gdpr$open.answered <- 1
gdpr$open.answered[is.na(gdpr$gdpr.aims)==TRUE] <- 0
gdpr <- read.csv("G:\\Sicherung_0410\\Dokumente\\Job Kreuter\\2018_GDPR\\gdprknow.csv")
gdpr$open.answered <- 1
View(gdpropen)
View(gdpr)
gdpr$open.answered[is.na(gdpr$gdpr.aims)==TRUE] <- 0
table(gdpr$gdpr.know, gdpr$open.answered)
gdpr$open.answered <- 1
gdpr$open.answered[is.na(gdpr$gdpr.aims)==TRUE] <- 0
table(gdpr$gdpr.know, gdpr$open.answered)
colnames(gdpr[1]) <- "wave"
View(gdpr)
colnames(gdpr[1]) <- "wave"
View(gdpr)
str(gdpr)
rename(gdpr, ï..wave.num = wav)
rename(gdpr, ï..wave.num = wave)
# Packages
library(dplyr)
rename(gdpr, ï..wave.num = wave)
gdpr <- rename(gdpr, ï..wave.num = wave)
View(gdpr)
gdpr <- rename(gdpr, wave = ï..wave.num)
View(gdpr)
# Packages
library(dplyr)
gdpr <- read.csv("G:\\Sicherung_0410\\Dokumente\\Job Kreuter\\2018_GDPR\\gdprknow.csv")
gdpr <- rename(gdpr, wave = ï..wave.num)
gdpr$open.answered <- 1
gdpr$open.answered[is.na(gdpr$gdpr.aims)==TRUE] <- 0
table(gdpr$gdpr.know, gdpr$open.answered)
# In 47 entries, the respondent has indicated knowing the GDPR, but has not answered the question concerning the aims of the GDPR
table(gdpr$gdpr.know, gdpr$open.answered[gdpr$wave==0])
table(gdpr$gdpr.know, gdpr$open.answered, gdpr$wave)
gdpr <- read.csv("G:\\Sicherung_0410\\Dokumente\\Job Kreuter\\2018_GDPR\\gdprknow.csv")
gdpr <- rename(gdpr, wave = ï..wave.num)
gdpr$open.answered <- 1
gdpr$open.answered[is.na(gdpr$gdpr.aims)==TRUE] <- 0
# Cross-tabulation for whether the respondent has indicated knowing the GDPR (rows) and whether an entry to the open question has been made (columns); seperately for the two waves (0 and 1).
table(gdpr$gdpr.know, gdpr$open.answered, gdpr$wave)
# In total, 47 entries, the respondent has indicated knowing the GDPR, but has not answered the question concerning the aims of the GDPR
View(gdpr)
View(gdpr)
View(gdpr)
View(gdpr)
citation("hmisc")
wd
install.packages("bookdown")
setwd("F:\\Sicherung_0410\\Dokumente\\Job Kreuter\\big-data-and-social-science")
bookdown::render_book(“index.Rmd")
bookdown::render_book("index.Rmd")
setwd("F:\\Sicherung_0410\\Dokumente\\Job Kreuter\\big-data-and-social-science")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
