data$abitur[data$school.educ.num==6] <- 1
data$abitur[data$school.educ.num<6 & is.na(data$school.educ.num)==FALSE] <- 0
# Check
# table(data$school.educ.num, data$abitur)
# 1s ("Noch Sch?ler/-in" are missing)
# Ordinal variable indicating having no Abitur, Abitur, or Abitur and a tertiary degree #(university or "Fachhochschule").
data$abi.uni <- NA
data$abi.uni[data$school.educ.num<5 & is.na(data$school.educ.num)==FALSE] <- 1
data$abi.uni[data$school.educ.num==5 | data$school.educ.num==6] <- 2
data$abi.uni[(data$school.educ.num==5 | data$school.educ.num==6) &
(data$highest.education=="Bachelor an (Fach-)Hochschule abgeschlossen" |
data$highest.education=="Fachhochschulabschluss (z. B. Diplom, Master)" |
data$highest.education=="Promotion" |
data$highest.education=="Universitätsabschluss (z. B. Diplom, Magister, Staatsexamen, Master)")] <- 3
# Check
# table(data$school.educ.num, data$abi.uni)
# Dichotomous variable indicating having a tertiary degree (university or "Fachhochschule") # or not.
data$university.degree <- NA
data$university.degree[data$abi.uni==2 | data$abi.uni==3] <- 1
data$university.degree[data$abi.uni==1] <- 0
# Check
# table(data$university.degree, data$abi.uni)
# Education (4 categories) as factor
data$school.educ.num4.fact <- factor(data$school.educ.num4)
levels(data$school.educ.num4.fact) <- c("Hauptschule", "Mittlere Reife", "Fachhochschulreife", "Abitur")
# Accounts:
# Dummies:
data$account.google.dummy <- NA
data$account.google.dummy[data$account.google=="Yes"] <- 1
data$account.google.dummy[data$account.google=="No, but before" |
data$account.google=="No, never" ] <- 0
data$account.facebook.dummy <- NA
data$account.facebook.dummy[data$account.facebook=="Yes"] <- 1
data$account.facebook.dummy[data$account.facebook=="No, but before" |
data$account.facebook=="No, never" ] <- 0
data$account.twitter.dummy <- NA
data$account.twitter.dummy[data$account.twitter=="Yes"] <- 1
data$account.twitter.dummy[data$account.twitter=="No, but before" |
data$account.twitter=="No, never"] <- 0
data$account.linkedin.dummy <- NA
data$account.linkedin.dummy[data$account.linkedin=="Yes"] <- 1
data$account.linkedin.dummy[data$account.linkedin=="No, but before" |
data$account.linkedin=="No, never"] <- 0
data$account.xing.dummy <- NA
data$account.xing.dummy[data$account.xing=="Yes"] <- 1
data$account.xing.dummy[data$account.xing=="No, but before" |
data$account.xing=="No, never"] <- 0
# Index:
# (Note: If one of the dummy variables is NA, number.accounts will also be NA! Possible
# solution: Code NAs to 0)
for (i in 1:nrow(data)){
data$number.accounts[i] <- data$account.google.dummy[i] +
data$account.facebook.dummy[i] + data$account.twitter.dummy[i] +
data$account.linkedin.dummy[i] + data$account.xing.dummy[i]
}
# Number devices:
# Dummies:
data$device.smartphone.dummy <- NA
data$device.smartphone.dummy[data$device.smartphone=="ja"] <- 1
data$device.smartphone.dummy[data$device.smartphone=="nein"] <- 0
data$device.handy.dummy <- NA
data$device.handy.dummy[data$device.handy=="ja"] <- 1
data$device.handy.dummy[data$device.handy=="nein"] <- 0
data$device.desktop.dummy <- NA
data$device.desktop.dummy[data$device.desktop=="ja"] <- 1
data$device.desktop.dummy[data$device.desktop=="nein"] <- 0
data$device.tablet.dummy <- NA
data$device.tablet.dummy[data$device.tablet=="ja"] <- 1
data$device.tablet.dummy[data$device.tablet=="nein"] <- 0
data$device.ereader.dummy <- NA
data$device.ereader.dummy[data$device.ereader=="ja"] <- 1
data$device.ereader.dummy[data$device.ereader=="nein"] <- 0
# Index:
# (Note: If one of the dummy variables is NA, number.accounts will also be NA! Possible
# solution: Code NAs to 0)
for (i in 1:nrow(data)){
data$number.devices[i] <- data$device.smartphone.dummy[i] +
data$device.handy.dummy[i] + data$device.desktop.dummy[i] +
data$device.tablet.dummy[i] + data$device.ereader.dummy[i]
}
# Time spent on Info page
data$time.info <- NA
for (i in 1:nrow(data)){
data$time.info[i][is.na(data$rts.gdpr[i])==FALSE & data$rts.gdpr[i]!=0] <-
(data$rts.gdpr[i] - data$rts.previouspage[i])
data$time.info[i][is.na(data$rts.passengers[i])==FALSE & data$rts.passengers[i]!=0] <-
(data$rts.passengers[i] - data$rts.previouspage[i])
}
# GDPR: 202 words; Passengers: 212 words
# Calculating threshold:
# GDPR: 202/1000=0,202 -> 0,202*60=12,12 -> 13
# Passengers: 212/1000=0,212 -> 0,212*60=12,72 -> 13
data$speeding <- NA
data$speeding[data$time.info<13] <- 1
data$speeding[data$time.info>=13] <- 0
# table(data$speeding)
# Further/different control variables for Table 1
# Age
data$age.cat <- NA
data$age.cat[data$age<30] <- 1
data$age.cat[data$age>=30 & data$age<=49] <- 2
data$age.cat[data$age>=50] <- 3
data$age.cat.fac <- factor(data$age.cat,
levels = c(1,2,3),
labels = c("below30", "30to50", "above50"))
data$age.cat.fac <- relevel(data$age.cat.fac, "below30")
# FB and Google accounts
data$account.facebook.fac <- factor(data$account.facebook)
data$account.google.fac <- factor(data$account.google)
data$account.facebook.fac <- relevel(data$account.facebook.fac, "No, never")
data$account.google.fac <- relevel(data$account.google.fac, "No, never")
# Add variable indicating "newness"/uniqueness of respondent
data$enterwave[data$wave.num==1] <- 1
for (i in 1:nrow(data)){
if(data$wave.num[i]==2 & data$pid[i] %in% data[1:i-1,]$pid == FALSE){
data$enterwave[i] <- 2
}
if(data$wave.num[i]==3 & data$pid[i] %in% data[1:i-1,]$pid == FALSE){
data$enterwave[i] <- 3
}
}
data$newness <- 0
data$newness[is.na(data$enterwave)==FALSE] <- 1
# Wave 1
open.gdpr.w1 <- read.csv2("Trust1_open-ends_code_new.csv")
open.gdpr.w1 <- select(open.gdpr.w1, p_0002, open.gdpr.1, open.gdpr.2, open.gdpr.3, open.gdpr.4) %>% mutate (wave.num = 1) %>% rename(pid = "p_0002") %>% distinct()
data <- left_join(data, open.gdpr.w1,
by = c("pid", "wave.num"))
# Wave 2
open.gdpr.w2 <- read.csv2("Trust2_open-ends_code_new.csv")
open.gdpr.w2 <- select(open.gdpr.w2, p_0002, open.gdpr.1, open.gdpr.2, open.gdpr.3, open.gdpr.4) %>% mutate (wave.num = 2) %>% rename(pid = "p_0002") %>% distinct()
data <- left_join(data, open.gdpr.w2,
by = c("pid", "wave.num"))
# Wave 3
open.gdpr.w3 <- read.csv2("Trust3_open-ends_code_new20.csv")
open.gdpr.w3 <- select(open.gdpr.w3, p_0002, open.gdpr.1, open.gdpr.2, open.gdpr.3, open.gdpr.4) %>% mutate (wave.num = 3) %>% rename(pid = "p_0002")%>% distinct()
data <- left_join(data, open.gdpr.w3,
by = c("pid", "wave.num"))
# Move all values to same same columns
# To the columns open.gdpr.1 - open.gdpr.4
for (i in 1:nrow(data)){
if (is.na(data$open.gdpr.1.x[i])==FALSE){
data$open.gdpr.1[i] <- data$open.gdpr.1.x[i]
}
if (is.na(data$open.gdpr.2.x[i])==FALSE){
data$open.gdpr.2[i] <- data$open.gdpr.2.x[i]
}
if (is.na(data$open.gdpr.3.x[i])==FALSE){
data$open.gdpr.3[i] <- data$open.gdpr.3.x[i]
}
if (is.na(data$open.gdpr.4.x[i])==FALSE){
data$open.gdpr.4[i] <- data$open.gdpr.4.x[i]
}
if (is.na(data$open.gdpr.1.y[i])==FALSE){
data$open.gdpr.1[i] <- data$open.gdpr.1.y[i]
}
if (is.na(data$open.gdpr.2.y[i])==FALSE){
data$open.gdpr.2[i] <- data$open.gdpr.2.y[i]
}
if (is.na(data$open.gdpr.3.y[i])==FALSE){
data$open.gdpr.3[i] <- data$open.gdpr.3.y[i]
}
if (is.na(data$open.gdpr.4.y[i])==FALSE){
data$open.gdpr.4[i] <- data$open.gdpr.4.y[i]
}
}
data <- data %>% select(-open.gdpr.1.x,
-open.gdpr.1.y,
-open.gdpr.2.x,
-open.gdpr.2.y,
-open.gdpr.3.x,
-open.gdpr.3.y,
-open.gdpr.4.x,
-open.gdpr.4.y) # Removing redundant columns
data$open.gdpr.1[data$open.gdpr.1 == 22] <- 2 # Removing coding mistake
## Add treatment variable based also on answers on open questions
data$gdpr.know.new <- NA
data$gdpr.know.new[(data$open.gdpr.1 %in% c(1:4)==TRUE | data$open.gdpr.1 %in% c(9:17, 20)
==TRUE |
data$open.gdpr.2 %in% c(1:4)==TRUE | data$open.gdpr.2 %in% c(9:17, 20)
==TRUE |
data$open.gdpr.3 %in% c(1:4)==TRUE | data$open.gdpr.3 %in% c(9:17, 20)
==TRUE |
data$open.gdpr.4 %in% c(1:4)==TRUE | data$open.gdpr.4 %in% c(9:17, 20)
==TRUE)] <- 1
data$gdpr.know.new[((data$open.gdpr.1 %in% c(5:8)==TRUE| data$open.gdpr.1 %in% c(18:19)==TRUE) &
data$open.gdpr.2 %in% c(1:4)==FALSE &
data$open.gdpr.2 %in% c(9:16, 20)==FALSE &
data$open.gdpr.3 %in% c(1:4)==FALSE &
data$open.gdpr.3 %in% c(9:16, 20)==FALSE &
data$open.gdpr.4 %in% c(1:4)==FALSE &
data$open.gdpr.4 %in% c(9:16, 20)==FALSE) |
data$gdpr.know.num == 0 |
is.na(data$gdpr.aims) == TRUE |
data$gdpr.aims == "keine Angabe"] <- 0
# data <- filter(data, is.na(gdpr.know.new)==FALSE) # Remove duplicate entries
# table(data$gdpr.know, data$gdpr.know.new)
#data.balanced <- data %>% filter(pid %in% intersect(data.wave1$pid, data.wave2$pid))
# %>% filter(pid %in% intersect(data.wave1$pid, data.wave3$pid))
data.balanced.w1w2 <- data %>% filter(pid %in% intersect(data.wave1$pid, data.wave2$pid)) %>% filter(wave.num!=3)
# Recoding treatment as a factor
data$tr.fac <- factor(data$randomization_gdprinfo_str)
data$tr.fac <- relevel(data$tr.fac, "None")
# Recoding text comprehension variable to numerical variable, subsequently dichotomizing the numeric variable into no or little comprehensible (0) and somewhat or very comprehensible (1)
data$text.comprehensible.num <- NA
data$text.comprehensible.num[data$text.comprehensible=="Überhaupt nicht verständlich"] <-
1
data$text.comprehensible.num[data$text.comprehensible=="Wenig verständlich"] <- 2
data$text.comprehensible.num[data$text.comprehensible=="Etwas verständlich"] <- 3
data$text.comprehensible.num[data$text.comprehensible=="Sehr verständlich"] <- 4
data$text.comprehensible.dich <- NA
data$text.comprehensible.dich[data$text.comprehensible.num==1 |
data$text.comprehensible.num==2] <- 0
data$text.comprehensible.dich[data$text.comprehensible.num==3 |
data$text.comprehensible.num==4] <- 1
# Adding speeding variable: word count
data$words <- NA
# Wave 1
data$words[data$wave.num==1] <- 606 # Has to be reduced later on to 578
for (i in 1:nrow(data)){
if (is.na(data$trust.google[i])==FALSE &
data$scale.type.wave1.prob[i]==FALSE & is.na(data$scale.type.wave1.prob[i])==FALSE){
data$words[i] <- data$words[i]+35
}
}
for (i in 1:nrow(data)){
if (is.na(data$trust.facebook[i])==FALSE &
data$scale.type.wave1.prob[i]==FALSE & is.na(data$scale.type.wave1.prob[i])==FALSE){
data$words[i] <- data$words[i]+35
}
}
for (i in 1:nrow(data)){
if (is.na(data$trust.researchers[i])==FALSE &
data$scale.type.wave1.prob[i]==FALSE & is.na(data$scale.type.wave1.prob[i])==FALSE){
data$words[i] <- data$words[i]+35
}
}
for (i in 1:nrow(data)){
if (is.na(data$trust.google[i])==FALSE & data$scale.type.wave1.prob[i]==FALSE & is.na(data$scale.type.wave1.prob[i])==TRUE){
data$words[i] <- data$words[i]+29
}
}
for (i in 1:nrow(data)){
if ((is.na(data$trust.facebook[i])==FALSE) & data$scale.type.wave1.prob[i]==FALSE & is.na(data$scale.type.wave1.prob[i])==TRUE){
data$words[i] <- data$words[i]+29
}
}
for (i in 1:nrow(data)){
if ((is.na(data$trust.researchers[i])==FALSE) & data$scale.type.wave1.prob[i]==FALSE & is.na(data$scale.type.wave1.prob[i])==TRUE){
data$words[i] <- data$words[i]+29
}
}
for (i in 1:nrow(data)){
if (is.na(data$trust.fedoffstats[i])==FALSE & data$scale.type.wave1.prob[i]==TRUE &
is.na(data$scale.type.wave1.prob[i])==FALSE){
data$words[i] <- data$words[i]+32
}
}
for (i in 1:nrow(data)){
if (is.na(data$trust.fedoffstats[i])==FALSE & data$scale.type.wave1.prob[i]==FALSE &
is.na(data$scale.type.wave1.prob[i])==FALSE){
data$words[i] <- data$words[i]+38
}
}
for (i in 1:nrow(data)){
if ((is.na(data$rts4727492[i])==FALSE & data$rts4727492[i]!=0) |
(is.na(data$rts4727550[i])==FALSE & data$rts4727550[i]!=0) |
(is.na(data$rts4727617[i])==FALSE & data$rts4727617[i]!=0) |
(is.na(data$rts4727664[i])==FALSE & data$rts4727664[i]!=0)){
data$words[i] <- data$words[i]+19
}
if ((is.na(data$rts4727802[i])==FALSE & data$rts4727802[i]!=0) |
(is.na(data$rts4727804[i])==FALSE & data$rts4727804[i]!=0) |
(is.na(data$rts4727811[i])==FALSE & data$rts4727811[i]!=0) |
(is.na(data$rts4727836[i])==FALSE & data$rts4727836[i]!=0)){
data$words[i] <- data$words[i]+23
}
}
for (i in 1:nrow(data)){
if(data$wave.num[i]==1 & data$gdpr.know[i]=="Ja" &
is.na(data$wave.num[i])==FALSE & is.na(data$gdpr.know[i])==FALSE){
data$words[i] <- data$words[i]+12
}
}
for (i in 1:nrow(data)){
if((data$account.google[i]=="Yes" | data$account.google[i]=="No, but before" | data$account.facebook[i]=="Yes" |data$account.facebook[i]=="No, but before") & data$wave.num[i]==1 & is.na(data$account.facebook[i])==FALSE &
is.na(data$account.google[i])==FALSE){
data$words[i] <- data$words[i]+2
}
}
for (i in 1:nrow(data)){
if(data$random_id[i] == 1 & is.na(data$random_id[i])==FALSE){
data$words[i] <- data$words[i]+38
}
if(data$random_id[i] == 2 & is.na(data$random_id[i])==FALSE){
data$words[i] <- data$words[i]+32
}
}
# Wave 2
data$words[data$wave.num==2] <- 622
for (i in 1:nrow(data)){
if(data$wave.num[i]==2 & data$gdpr.know[i]=="Ja" &
is.na(data$wave.num[i])==FALSE & is.na(data$gdpr.know[i])==FALSE){
data$words[i] <- data$words[i]+12
}
}
for (i in 1:nrow(data)){
if((data$account.google[i]=="Yes" | data$account.google[i]=="No, but before" | data$account.facebook[i]=="Yes" |data$account.facebook[i]=="No, but before") & is.na(data$account.facebook[i])==FALSE & is.na(data$account.google[i])==FALSE & data$wave.num[i]==2){
data$words[i] <- data$words[i]+47
}
}
# Wave 3
data$words[data$wave.num==3] <- 783
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="GDPR" &
data$gdpr.know=="Nein"] <- 783+227
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="PassRights" &
data$gdpr.know=="Nein"] <- 783+239
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="GDPR" &
data$gdpr.know=="Ja"] <- 783+227+12
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="PassRights" &
data$gdpr.know=="Ja"] <- 783+239+12
for (i in 1:nrow(data)){
if (is.na(data$feeling.google.share.research.postexp[i] )==FALSE){
data$words[i] <- data$words[i]+31
}
if (is.na(data$feeling.facebook.share.research.postexp[i])==FALSE){
data$words[i] <- data$words[i]+31
}
if (is.na(data$feeling.fedoffstats.share.research.postexp[i])==FALSE){
data$words[i] <- data$words[i]+33
}
if (is.na(data$feeling.google.share.commercial.postexp[i])==FALSE){
data$words[i] <- data$words[i]+34
}
if (is.na(data$feeling.facebook.share.commercial.postexp[i])==FALSE){
data$words[i] <- data$words[i]+34
}
if (is.na(data$feeling.fedoffstats.share.commercial.postexp[i])==FALSE){
data$words[i] <- data$words[i]+36
}
}
# Code whether respondent is speeder or not
data$speeding.survey <- NA
tale(data$words)
table(data$words)
for (i in 1:nrow(data)){
if (data$wave.num[i]!=1 &
((data$words[i]*0.3)<data$duration[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$duration[i])==FALSE){
data$speeding.survey[i] <- 1
}
if (data$wave.num[i]!=1 &
((data$words[i]*0.3)<data$duration[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$duration[i])==FALSE){
data$speeding.survey[i] <- 0
}
if (data$wave.num[i]==1 &
((data$words[i]*0.3)<data$rts4650338[i])==TRUE &
is.na(data$words[i])==FALSE & is.na(data$rts4650338[i])==FALSE){
data$speeding.survey[i] <- 1
}
if (data$wave.num[i]==1 &
((data$words[i]*0.3)<data$rts4650338[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$rts4650338[i])==FALSE){
data$speeding.survey[i] <- 0
}
}
table(data$speeding.survey)
View(head(data))
data$words[1]*0.3
data$words[2]*0.3
data$words[4]*0.3
data$wave.num[4]!=1
data$rts4650338[4]
data$wave.num[4]!=1<data$rts4650338[4]
data$wave.num[4]!=1 < data$rts4650338[4]
(data$wave.num[4]!=1) < data$rts4650338[4]
(data$wave.num[4]!=1) < data$rts4650338[4])==TRUE
((data$wave.num[4]!=1) < data$rts4650338[4])==TRUE
((data$words[4]*0.3) < data$rts4650338[4])==TRUE
data$rts4650338[4]
data$words[4]*0.3
# Code whether respondent is speeder or not
data$speeding.survey <- NA
for (i in 1:nrow(data)){
if (data$wave.num[i]!=1 &
((data$words[i]*0.3)<=data$duration[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$duration[i])==FALSE){
data$speeding.survey[i] <- 0
}
if (data$wave.num[i]!=1 &
((data$words[i]*0.3)>data$duration[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$duration[i])==FALSE){
data$speeding.survey[i] <- 1
}
if (data$wave.num[i]==1 &
((data$words[i]*0.3)<=data$rts4650338[i])==TRUE &
is.na(data$words[i])==FALSE & is.na(data$rts4650338[i])==FALSE){
data$speeding.survey[i] <- 0
}
if (data$wave.num[i]==1 &
((data$words[i]*0.3)>data$rts4650338[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$rts4650338[i])==FALSE){
data$speeding.survey[i] <- 1
}
}
table(data$words)
table(data$speeding.survey)
View(head(data))
data$words[1]*0.3
data$rts4650338[1]
((data$words[1]*0.3) < data$rts4650338[1])==TRUE
data$words[6]*0.3
data$rts4650338[6]
((data$words[6]*0.3) < data$rts4650338[6])==TRUE
filter(data, is.na(speeding.survey)==TRUE)
library(dplyr)
filter(data, is.na(speeding.survey)==TRUE)
filter(data, is.na(data$speeding.survey)==TRUE)
View(tail(data))
data$words[6282]*0.3
data$rts4650338[6282]
data$duration[6282]
((data$words[6282]*0.3) < data$duration[6282])==TRUE
data$words[6283]*0.3
data$duration[6283]
((data$words[6283]*0.3) < data$duration[6283])==TRUE
table(data$speeding.survey, data$wave.num)
# Wave 3
data$words[data$wave.num==3] <- 783
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="GDPR" &
data$gdpr.know=="Nein"] <- 783+227
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="PassRights" &
data$gdpr.know=="Nein"] <- 783+239
for (i in 1:nrow(data)){
if (data$gdpr.know[i]=="Ja" & data$wave.num[i]==3){
data$words[i] <- data$words[i]+12
}
}
# Wave 3
data$words[data$wave.num==3] <- 783
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="GDPR" &
data$gdpr.know=="Nein"] <- 783+227
data$words[data$wave.num==3 &
data$randomization_gdprinfo_fac=="PassRights" &
data$gdpr.know=="Nein"] <- 783+239
for (i in 1:nrow(data)){
if (data$gdpr.know[i]=="Ja" & data$wave.num[i]==3
& is.na(data$gdpr.know[i])==FALSE){
data$words[i] <- data$words[i]+12
}
}
for (i in 1:nrow(data)){
if (is.na(data$feeling.google.share.research.postexp[i] )==FALSE){
data$words[i] <- data$words[i]+31
}
if (is.na(data$feeling.facebook.share.research.postexp[i])==FALSE){
data$words[i] <- data$words[i]+31
}
if (is.na(data$feeling.fedoffstats.share.research.postexp[i])==FALSE){
data$words[i] <- data$words[i]+33
}
if (is.na(data$feeling.google.share.commercial.postexp[i])==FALSE){
data$words[i] <- data$words[i]+34
}
if (is.na(data$feeling.facebook.share.commercial.postexp[i])==FALSE){
data$words[i] <- data$words[i]+34
}
if (is.na(data$feeling.fedoffstats.share.commercial.postexp[i])==FALSE){
data$words[i] <- data$words[i]+36
}
}
# Code whether respondent is speeder or not
data$speeding.survey <- NA
for (i in 1:nrow(data)){
if (data$wave.num[i]!=1 &
((data$words[i]*0.3)<=data$duration[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$duration[i])==FALSE){
data$speeding.survey[i] <- 0
}
if (data$wave.num[i]!=1 &
((data$words[i]*0.3)>data$duration[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$duration[i])==FALSE){
data$speeding.survey[i] <- 1
}
if (data$wave.num[i]==1 &
((data$words[i]*0.3)<=data$rts4650338[i])==TRUE &
is.na(data$words[i])==FALSE & is.na(data$rts4650338[i])==FALSE){
data$speeding.survey[i] <- 0
}
if (data$wave.num[i]==1 &
((data$words[i]*0.3)>data$rts4650338[i])==TRUE
& is.na(data$words[i])==FALSE & is.na(data$rts4650338[i])==FALSE){
data$speeding.survey[i] <- 1
}
}
table(data$speeding.survey, data$wave.num)
bookdown::render("index.html")
bookdown::render_book("index.html")
bookdown::render_book("index.html")
bookdown::render_book("index.html")
bookdown::render_book("index.html")
bookdown::render_book("index.html")
bookdown::render_book("index.html")
bookdown::render_book("index.html")
